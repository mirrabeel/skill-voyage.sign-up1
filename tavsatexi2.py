sched1 = [(6, 8), (6, 12), (6, 7), (7, 8), (7, 10), (8, 9), (8, 10), (9, 12),
             (9, 10), (10, 11), (10, 12), (11, 12)]
sched2 = [(6, 7), (6, 8), (6, 9), (7, 8), (7, 10), (8, 9), (8, 11), (9, 10),
             (9, 12), (10, 11), (10, 12), (11, 12)]
sched3 = [(6, 10), (6, 11), (6, 12), (7, 9), (7, 11), (7, 12), (8, 10), (8, 12),
             (9, 11), (9, 12), (10, 12), (11, 12)]
sched4 = [(6, 9), (6, 10), (6, 11), (7, 8), (7, 12), (8, 10), (8, 11), (8, 12),
             (9, 10), (9, 11), (10, 12), (11, 12)]

# ფუნქცია, რომელიც პოულობს დროის იმ საათს, როცა ყველაზე მეტი ცნობილი იმყოფება.
def max_celebrities(intervals): 
    #ამით ვითვლით დროს
    celebrity_count = {}
    #ვითვლით რამდენი ცნობილი ადამიანი იმყოფება ყოველ საათში
    for start, end in intervals: #ყოველი ინტერვალისთვის
        for hour in range(start, end): #ყოველი საათისთვის რაც ინტერვალშა
            if hour in celebrity_count: #თუ ეს საათი არის ინტერვალში
                celebrity_count[hour] += 1 #ვზრდით მასში სელებრითების რაოდენობას
            else: #თუ ინტერვალში არ არის მოცემული საათი
                celebrity_count[hour] = 1 #ვქმნით ჩანაწერს და ვწერთ ერთს

#ვპოულობთ იმ საათს სადაც ყველაზე მეტი ცნობილი იმყოფება
    best_hour = max(celebrity_count, key=celebrity_count.get)
    #ასევე ვეძებთ სელებრითების მაქსიმალურ რაოდენობას
    max_count = celebrity_count[best_hour]

#ვაბრუნებთ საუკეთესო დროს და სელებრითების მაქსიმალურ რაოდენობას
    return best_hour, max_count

#ვიძახებთ ფუნქციას პირველი გრაფიკიდან(schedul1)
best_hour, max_count = max_celebrities(sched1)
print(f"best hour attend: {best_hour}")#ვეძებთ დასწრების საუკეთესო დროს 
print(f"maximum celebrities: {max_count}")#ვეძებთ სელებრითების მაქსიმალურ რაოდენობას